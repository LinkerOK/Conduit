using Conduit.Net.Data;
using Conduit.Net.Packets;
using Conduit.Net.Packets.Play;
using Conduit.Net.Packets.Play.Clientbound;
using Conduit.Net.Packets.Play.Serverbound;

namespace Conduit.Net.Protocols.Flow
{
    public class PlayFlow : ProtocolFlow<PlayFlow>
    {
        private static readonly TypeMap s_clientboundMap = new(
            typeof(SpawnEntity),
            typeof(SpawnExperienceOrb),
            typeof(SpawnLivingEntity),
            typeof(SpawnPainting),
            typeof(SpawnPlayer),
            typeof(SculkVibrationSignal),
            typeof(EntityAnimation),
            typeof(Statistics),
            typeof(AcknowledgePlayerDigging),
            typeof(BlockBreakAnimation),
            typeof(BlockEntityData),
            typeof(BlockAction),
            typeof(BlockChange),
            typeof(BossBar),
            typeof(ServerDifficulty),
            typeof(Packets.Play.Clientbound.ChatMessage),
            typeof(ClearTitles),
            typeof(Packets.Play.Clientbound.TabComplete),
            typeof(DeclareCommands),
            typeof(Packets.Play.Clientbound.CloseWindow),
            typeof(WindowItems),
            typeof(WindowProperty),
            typeof(SetSlot),
            typeof(SetCooldown),
            typeof(PluginMessage),
            typeof(NamedSoundEffect),
            typeof(Disconnect),
            typeof(EntityStatus),
            typeof(Explosion),
            typeof(UnloadChunk),
            typeof(ChangeGameState),
            typeof(OpenHorseWindow),
            typeof(InitializeWorldBorder),
            typeof(KeepAlive),
            typeof(ChunkDataAndUpdateLight),
            typeof(Effect),
            typeof(Particle),
            typeof(UpdateLight),
            typeof(JoinGame),
            typeof(MapData),
            typeof(TradeList),
            typeof(EntityPosition),
            typeof(EntityPositionAndRotation),
            typeof(EntityRotation),
            typeof(VehicleMove),
            typeof(OpenBook),
            typeof(OpenWindow),
            typeof(OpenSignEditor),
            typeof(Ping),
            typeof(CraftRecipeResponse),
            typeof(Packets.Play.Clientbound.PlayerAbilities),
            typeof(EndCombatEvent),
            typeof(EnterCombatEvent),
            typeof(DeathCombatEvent),
            typeof(PlayerInfo),
            typeof(Face),
            typeof(Packets.Play.Clientbound.PlayerPositionAndLook),
            typeof(UnlockRecipes),
            typeof(DestroyEntities),
            typeof(RemoveEntityEffect),
            typeof(ResourcePackSend),
            typeof(Respawn),
            typeof(EntityHeadLook),
            typeof(MultiBlockChange),
            typeof(SelectAdvancementTab),
            typeof(ActionBar),
            typeof(WorldBorderCenter),
            typeof(WorldBorderLerpSize),
            typeof(WorldBorderSize),
            typeof(WorldBorderWarningDelay),
            typeof(WorldBorderWarningReach),
            typeof(Camera),
            typeof(HeldItemChange),
            typeof(UpdateViewPosition),
            typeof(UpdateViewDistance),
            typeof(SpawnPosition),
            typeof(DisplayScoreboard),
            typeof(AttachEntity),
            typeof(EntityVelocity),
            typeof(EntityEquipment),
            typeof(SetExperience),
            typeof(UpdateHealth),
            typeof(ScoreboardObjective),
            typeof(SetPassengers),
            typeof(Teams),
            typeof(UpdateScore),
            typeof(UpdateSimulationDistance),
            typeof(SetTitleSubTitle),
            typeof(TimeUpdate),
            typeof(SetTitleText),
            typeof(SetTitleTimes),
            typeof(EntitySoundEffect),
            typeof(StopSound),
            typeof(PlayerListHeaderAndFooter),
            typeof(NBTQueryResponse),
            typeof(CollectItem),
            typeof(EntityTeleport),
            typeof(Advancements),
            typeof(EntityProperties),
            typeof(EntityEffect),
            typeof(DeclareRecipes),
            typeof(Tags)
        );
        private static readonly TypeMap s_serverboundMap = new(
            typeof(TeleportConfirm),
            typeof(QueryBlockNBT),
            typeof(SetDifficulty),
            typeof(Packets.Play.Serverbound.ChatMessage),
            typeof(ClientStatus),
            typeof(ClientSettings),
            typeof(Packets.Play.Serverbound.TabComplete),
            typeof(ClickWindowButton),
            typeof(ClickWindow),
            typeof(Packets.Play.Serverbound.CloseWindow),
            typeof(PluginMessage),
            typeof(EditBook),
            typeof(QueryEntityNBT),
            typeof(InteractEntity),
            typeof(GenerateStructure),
            typeof(KeepAlive),
            typeof(LockDifficulty),
            typeof(PlayerPosition),
            typeof(Packets.Play.Serverbound.PlayerPositionAndLook),
            typeof(PlayerRotation),
            typeof(PlayerMovement),
            typeof(VehicleMove),
            typeof(SteerBoat),
            typeof(PickItem),
            typeof(CraftRecipeRequest),
            typeof(Packets.Play.Serverbound.PlayerAbilities),
            typeof(PlayerDigging),
            typeof(EntityAction),
            typeof(SteerVehicle),
            typeof(Ping),
            typeof(SetRecipeBookState),
            typeof(SetDisplayedRecipe),
            typeof(NameItem),
            typeof(ResourcePackStatus),
            typeof(AdvancementTab),
            typeof(SelectTrade),
            typeof(SetBeaconEffect),
            typeof(HeldItemChange),
            typeof(UpdateCommandBlock),
            typeof(UpdateCommandBlockMinecart),
            typeof(CreativeInventoryAction),
            typeof(UpdateJigsawBlock),
            typeof(UpdateStructureBlock),
            typeof(UpdateSign),
            typeof(Animation),
            typeof(Spectate),
            typeof(PlayerBlockPlacement),
            typeof(UseItem)
        );

        public PlayFlow() : base(s_clientboundMap, s_serverboundMap) { }
    }
}